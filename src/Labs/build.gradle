plugins {
    id 'java'
    id "org.sonarqube" version "6.3.1.5724"
}

group = 'org.sonar-jenkins-training'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

test {
    useJUnitPlatform()
    afterSuite { desc, result ->
        if (!desc.parent) { // root suite only
            int total = result.testCount
            int passed = total - result.failedTestCount - result.skippedTestCount
            double passRate = total ? (passed / (double) total) * 100 : 100.0
            double minPass = 80.0 // set required minimum percent here
            println "Test results: total=${total}, passed=${passed}, passRate=${String.format('%.1f', passRate)}%"
            if (passRate < minPass) {
                throw new GradleException("Test pass rate ${String.format('%.1f', passRate)}% is below required ${minPass}%")
            }
        }
    }
}



sonarqube {
    properties {
        property "sonar.projectKey", "sonar-jenkins-training"
        property "sonar.projectName", "sonar-jenkins-training"
        property "sonar.host.url", "http://sonarqube:9000"
        property "sonar.token", "squ_fe5fa50fc8f0b838e3ce2fe42bbd7e117ac556dc"
    }
}